#!/usr/bin/env ruby

HEADLESS = false

require "yaml"
require "ruby2d"
require_relative "../lib/rts_engine/game"
require_relative "../lib/ruby2d_renderer/renderer"

config_path = ARGV[0]
raise "config path not specified" if config_path.nil?
raise "config path not found" unless File.exist?(config_path)

config = YAML.safe_load(File.read(config_path))
renderer = Renderer.new(
  screen_size: 800,
  world_size: config.fetch("world_size"),
)
camera = SimpleCamera.new(renderer)
game = Game.from_config(config, renderer)

set(
  title: "github.com/46bit/rts",
  width: game.renderer.screen_size,
  height: game.renderer.screen_size,
)

update do
  game.update
  game.render
  warn game.status_text
end

on :mouse_scroll do |event|
  camera.zoom(event.delta_y.positive?) unless event.delta_y.zero?
end

on :key_held do |event|
  case event.key
  when "left"
    camera.move(-5, 0)
  when "right"
    camera.move(5, 0)
  when "up"
    camera.move(0, -5)
  when "down"
    camera.move(0, 5)
  end
end

show
